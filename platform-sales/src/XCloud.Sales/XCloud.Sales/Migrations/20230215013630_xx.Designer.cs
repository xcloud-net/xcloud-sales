// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XCloud.Sales.Data.Database;

#nullable disable

namespace XCloud.Sales.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20230215013630_xx")]
    partial class xx
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:CharSet", "utf8mb4")
                .HasAnnotation("MySql:CharSetDelegation", DelegationModes.ApplyToAll)
                .HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Aftersale.AfterSales", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AfterSalesStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("HideForAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Images")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonForReturn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestedAction")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffNotes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserComments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("AfterSales", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Aftersale.AfterSalesComment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AfterSaleId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PictureJson")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("AfterSalesComment", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Aftersale.AftersalesItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AftersalesId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AftersalesItem", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("PageSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PictureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PriceRanges")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnPublicPage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NodePath")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PictureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PriceRanges")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Recommend")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RootId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeoName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShowOnHomePage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdminComment")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<double>("ApprovedReviewsRates")
                        .HasColumnType("REAL");

                    b.Property<int>("ApprovedTotalReviews")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttributeType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullDescription")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("IsHot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keywords")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxAmountInOnePurchase")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MaxPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MinPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaleVolume")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeoName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("StickyTop")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Goods", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsAttribute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("GoodsAttribute", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsCollection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("ApplyedCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Keywords")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("GoodsCollection", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsCollectionItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollectionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsSpecCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("GoodsCollectionItem", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsGradePrice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<int>("GoodsCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GradeId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("GoodsGradePrice", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PictureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GoodsPicture", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsSpecCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PreviousPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("GoodsPriceHistory");
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReviewText")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GoodsReview", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.GoodsSpecCombination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PictureId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecificationsJson")
                        .HasColumnType("TEXT")
                        .HasComment("规格配置参数");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("GoodsSpecCombination", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Spec", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.SpecValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsSpecId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceOffset")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("SpecValue", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Alert")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Link")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Catalog.TagGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TagGoods", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Common.Pages", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BodyContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverImageResourceData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PublishedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReadCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeoName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Pages", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Common.PagesReader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("PageId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("PagesReader", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Configuration.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Setting", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Coupons.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccountIssuedLimitCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExpiredDaysFromIssue")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAmountLimit")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<int>("IssuedAmount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MinimumConsumption")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UsedAmount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Coupon", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Coupons.CouponUserMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CouponId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MinimumConsumption")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UsedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("CouponUserMapping", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Finance.OrderBill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("NotifyData")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PayTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentTransactionId")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundNotifyData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefundTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundTransactionId")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Refunded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("OrderBill", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Finance.OrderRefundBill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundNotifyData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefundTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundTransactionId")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Refunded")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("OrderRefundBill", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Localization.LocaleStringResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LocaleStringResource", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Logging.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivityLogTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdministratorId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("BrowserType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Device")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("GeoCity")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("GeoCountry")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double?>("Lng")
                        .HasColumnType("REAL");

                    b.Property<string>("RequestPath")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectIntId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubjectType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlReferrer")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ActivityLog", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Media.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceData")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SeoFilename")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Picture", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Orders.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AffiliateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AfterSalesId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CouponDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CouponId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ExchangePointsAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GradePriceOffsetTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HideForAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsAftersales")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("OrderIp")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OrderShippingFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderSn")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OrderSubtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OrderTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<bool>("OverPaid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PaidTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PromotionDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("PromotionId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RefundedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("RewardPointsHistoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShippingAddressArea")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingAddressCity")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingAddressContact")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingAddressContactName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingAddressDetail")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingAddressId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingAddressProvice")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShippingRequired")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShippingStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ShippingTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Orders.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GoodsName")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsSpecCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("GradePriceOffset")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ItemWeight")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Orders.OrderNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("DisplayToUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("OrderNote", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Orders.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsSpecCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCartItem", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Promotion.StorePromotion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("IsExclusive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("StorePromotion", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Shipping.Shipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeliveryTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpressName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ShippedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingMethod")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalWeight")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Shipment", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Shipping.ShipmentOrderItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShipmentId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShipmentOrderItem", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Shipping.ShippingMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShippingMethod", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stock.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stock.Warehouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<double?>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double?>("Lng")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stock.WarehouseStock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Approved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApprovedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ApprovedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplierId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WarehouseId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("WarehouseStock", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stock.WarehouseStockItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("CombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeductQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RuningOut")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WarehouseStockId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("WarehouseStockItem", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stores.Store", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CopyrightInfo")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ICPRecord")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServiceTelePhone")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("StoreClosed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreLogo")
                        .HasMaxLength(1000)
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreServiceTime")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stores.StoreGoodsMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StoreGoodsMapping", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Stores.StoreManager", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("GlobalUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NickName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StoreManager", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.BalanceHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("ActionType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<decimal>("LatestBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("BalanceHistory", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Favorites", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.PointsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Message")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointsBalance")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UsedAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("PointsHistory", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.PrepaidCard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<bool>("Used")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UsedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("PrepaidCard", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountMobile")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avatar")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<string>("GlobalUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("HistoryPoints")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime>("LastActivityTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("NickName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.UserGrade", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("UserGrade", (string)null);
                });

            modelBuilder.Entity("XCloud.Sales.Data.Domain.Users.UserGradeMapping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("UserGradeMapping", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
