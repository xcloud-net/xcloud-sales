// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XCloud.Platform.Data.EntityFrameworkCore.Database;

#nullable disable

namespace XCloud.Platform.Data.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(PlatformDbContext))]
    [Migration("20230215013149_xx")]
    partial class xx
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:CharSet", "utf8mb4")
                .HasAnnotation("MySql:CharSetDelegation", DelegationModes.ApplyToAll)
                .HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Address.UserAddress", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AddressDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressDetail")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaCode")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CityCode")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<double?>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double?>("Lng")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nation")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NationCode")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceCode")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tel")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("sys_user_address", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Admin.SysAdmin", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_admin", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.AdminPermission.SysAdminRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_admin_role", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.AdminPermission.SysPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AppKey")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_permission", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.AdminPermission.SysResourceAcl", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<int>("AccessControlType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("PermissionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_resource_acl", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.AdminPermission.SysRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_role", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.AdminPermission.SysRolePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("PermissionKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_role_permission", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.App.SysApp", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppKey")
                        .IsUnique();

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_app", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.App.SysAppScope", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_app_scope", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.AsyncJob.JobRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Desc")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExceptionMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraData")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_job", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Dept.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("")
                        .HasComment("树的父级节点id");

                    b.Property<string>("TreeGroupKey")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.HasIndex("ParentId");

                    b.ToTable("sys_department", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Dept.DepartmentAssign", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("IsManager")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_department_assignment", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.IdGenerator.SysSequence", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<int>("NextId")
                        .IsConcurrencyToken()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Category")
                        .IsUnique();

                    b.HasIndex("CreationTime");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("sys_sequence", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Logging.ActivityLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AppId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExceptionDetail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Log")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_activity_log", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Menu.SysMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AppKey")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("IconCls")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("")
                        .HasComment("树的父级节点id");

                    b.Property<string>("PermissionJson")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TreeGroupKey")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("LastModificationTime");

                    b.HasIndex("ParentId");

                    b.ToTable("sys_menu", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Notification.SysNotification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("ActionType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("App")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Data")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Read")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderType")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_notification", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Region.SysRegion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("")
                        .HasComment("树的父级节点id");

                    b.Property<string>("RegionType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TreeGroupKey")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("ParentId");

                    b.ToTable("sys_region", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Settings.SysSettings", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_settings", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Storage.StorageResourceMeta", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("ExtraData")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("HashType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<int>("ReferenceCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceHash")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceKey")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long>("ResourceSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StorageProvider")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UploadTimes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("sys_storage_meta", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.Token.ValidationToken", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("sys_validation_token", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.User.SysExternalAccessToken", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessTokenType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GrantType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_external_access_token", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.User.SysExternalConnect", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_external_connect", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.User.SysUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("Avatar")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletionTime")
                        .HasComment("删除时间");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdentityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted")
                        .HasComment("是否删除");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastModificationTime")
                        .HasComment("更新时间，同时也是乐观锁");

                    b.Property<DateTime?>("LastPasswordUpdateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("NickName")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginIdentityName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PassWord")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IdentityName")
                        .IsUnique();

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LastModificationTime");

                    b.ToTable("sys_user", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.User.SysUserIdentity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Data")
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<bool?>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EmailConfirmedTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdentityType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MobileAreaCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<bool?>("MobileConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MobileConfirmedTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("MobilePhone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserIdentity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("UserId");

                    b.HasIndex("UserIdentity")
                        .IsUnique();

                    b.ToTable("sys_user_identity", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.User.SysUserRealName", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("ConfirmerId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("Data")
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCardBackUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IdCardConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("IdCardConfirmedTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCardFrontUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCardHandUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCardIdentity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCardRealName")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCardStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCardType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("IdCardIdentity")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("sys_user_realname", (string)null);
                });

            modelBuilder.Entity("XCloud.Platform.Core.Domain.User.SysWxUnion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("主键，最好是顺序生成的GUID");

                    b.Property<string>("AppId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UnionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.ToTable("sys_wx_union", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
